From: Nathan Pratta Teodosio <nteodosio@ubuntu.com>
Date: Fri, 6 Sep 2024 15:45:02 -0400
Subject: Applications should be listed even if Malcontent is not present

Forwarded: not-yet
Bug-Ubuntu: https://launchpad.net/bugs/2072772

at runtime.
---
 panels/applications/cc-applications-panel.c | 22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

diff --git a/panels/applications/cc-applications-panel.c b/panels/applications/cc-applications-panel.c
index bb8a6ad..5cc8a4d 100644
--- a/panels/applications/cc-applications-panel.c
+++ b/panels/applications/cc-applications-panel.c
@@ -74,6 +74,7 @@ struct _CcApplicationsPanel
   MctAppFilter    *app_filter;
   MctManager      *manager;
   guint            app_filter_id;
+  gboolean         have_mc_runtime;
 #endif
 
   gchar           *current_app_id;
@@ -1251,7 +1252,7 @@ on_items_changed_cb (GListModel *list,
     gtk_widget_set_visible (GTK_WIDGET (self->app_search_entry), FALSE);
   }
 #ifdef HAVE_MALCONTENT
-  else if (!self->app_filter) {
+  else if (self->have_mc_runtime && !self->app_filter) {
     gtk_stack_set_visible_child_name (self->main_page_stack, "malcontent-not-found-page");
     gtk_widget_set_visible (GTK_WIDGET (self->app_search_entry), FALSE);
   }
@@ -1512,7 +1513,8 @@ populate_applications (CcApplicationsPanel *self)
 
   g_list_store_remove_all (G_LIST_STORE (self->app_model));
 #ifdef HAVE_MALCONTENT
-  g_signal_handler_block (self->manager, self->app_filter_id);
+  if (self->have_mc_runtime)
+      g_signal_handler_block (self->manager, self->app_filter_id);
 #endif
 
   infos = g_app_info_get_all ();
@@ -1527,7 +1529,7 @@ populate_applications (CcApplicationsPanel *self)
         continue;
 
 #ifdef HAVE_MALCONTENT
-      if (!mct_app_filter_is_appinfo_allowed (self->app_filter, info))
+      if (self->have_mc_runtime && !mct_app_filter_is_appinfo_allowed (self->app_filter, info))
         continue;
 #endif
 
@@ -1539,7 +1541,8 @@ populate_applications (CcApplicationsPanel *self)
         gtk_list_box_select_row (self->app_listbox, GTK_LIST_BOX_ROW (row));
     }
 #ifdef HAVE_MALCONTENT
-  g_signal_handler_unblock (self->manager, self->app_filter_id);
+  if (self->have_mc_runtime)
+      g_signal_handler_unblock (self->manager, self->app_filter_id);
 #endif
 }
 
@@ -1928,6 +1931,7 @@ cc_applications_panel_init (CcApplicationsPanel *self)
                    G_SETTINGS_BIND_INVERT_BOOLEAN);
 
 #ifdef HAVE_MALCONTENT
+  self->have_mc_runtime = FALSE;
    /* FIXME: should become asynchronous */
   system_bus = g_bus_get_sync (G_BUS_TYPE_SYSTEM, self->cancellable, &error);
   if (system_bus == NULL)
@@ -1944,13 +1948,13 @@ cc_applications_panel_init (CcApplicationsPanel *self)
                                                  self->cancellable,
                                                  &error);
   if (error)
-    {
       g_warning ("Error retrieving app filter: %s", error->message);
-      return;
+  else
+    {
+      self->have_mc_runtime = TRUE;
+      self->app_filter_id = g_signal_connect (self->manager, "app-filter-changed",
+                                              G_CALLBACK (app_filter_changed_cb), self);
     }
-
-  self->app_filter_id = g_signal_connect (self->manager, "app-filter-changed",
-                                          G_CALLBACK (app_filter_changed_cb), self);
 #endif
   populate_applications (self);
 
