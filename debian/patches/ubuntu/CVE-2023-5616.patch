From: Alex Murray <alex.murray@canonical.com>
Date: Mon, 25 Mar 2024 13:17:52 +1030
Subject: [PATCH 1/2] remote-login: support both sshd service and socket
 systemd units

When disabling remote login, disable both the systemd service and socket
units. When enabling remote login, enable only the socket and ensure the service
is disabled so the two do not conflict.

Fixes CVE-2023-5616

Signed-off-by: Alex Murray <alex.murray@canonical.com>
---
 panels/system/remote-login/cc-remote-login.c | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/panels/system/remote-login/cc-remote-login.c b/panels/system/remote-login/cc-remote-login.c
index 2a61585..0a445fc 100644
--- a/panels/system/remote-login/cc-remote-login.c
+++ b/panels/system/remote-login/cc-remote-login.c
@@ -28,6 +28,10 @@
 #define SSHD_SERVICE "sshd.service"
 #endif
 
+#ifndef SSHD_SOCKET
+#define SSHD_SOCKET "sshd.socket"
+#endif
+
 typedef struct
 {
   AdwSwitchRow *widget;
@@ -43,7 +47,9 @@ cc_remote_login_get_enabled (AdwSwitchRow  *widget)
   /* disable the switch until the current state is known */
   gtk_widget_set_sensitive (GTK_WIDGET (widget), FALSE);
 
-  adw_switch_row_set_active (widget, cc_is_service_active (SSHD_SERVICE, G_BUS_TYPE_SYSTEM));
+  adw_switch_row_set_active (widget,
+                             (cc_is_service_active (SSHD_SERVICE, G_BUS_TYPE_SYSTEM) ||
+                              cc_is_service_active (SSHD_SOCKET, G_BUS_TYPE_SYSTEM)));
 
   gtk_widget_set_sensitive (GTK_WIDGET (widget), TRUE);
 }
@@ -51,13 +57,22 @@ cc_remote_login_get_enabled (AdwSwitchRow  *widget)
 static void
 enable_ssh_service (GError** error)
 {
-  cc_enable_service (SSHD_SERVICE, G_BUS_TYPE_SYSTEM, error);
+  /* on Ubuntu 24.04 we want to disable the service and enable the socket */
+  cc_disable_service (SSHD_SERVICE, G_BUS_TYPE_SYSTEM, error);
+  if (*error == NULL)
+    {
+      cc_enable_service (SSHD_SOCKET, G_BUS_TYPE_SYSTEM, error);
+    }
 }
 
 static void
 disable_ssh_service (GError** error)
 {
   cc_disable_service (SSHD_SERVICE, G_BUS_TYPE_SYSTEM, error);
+  if (*error == NULL)
+    {
+      cc_disable_service (SSHD_SOCKET, G_BUS_TYPE_SYSTEM, error);
+    }
 }
 
 static void
